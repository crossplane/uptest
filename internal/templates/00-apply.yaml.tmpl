# This file belongs to the resource apply step.
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: apply
spec:
  timeouts:
    apply: {{ .TestCase.Timeout }}
    assert: {{ .TestCase.Timeout }}
    exec: {{ .TestCase.Timeout }}
  steps:
  {{- if .TestCase.SetupScriptPath }}
  - name: Run Setup Script
    description: Setup the test environment by running the setup script.
    try:
    - command:
        entrypoint: {{ .TestCase.SetupScriptPath }}
  {{- end }}
  - name: Apply Resources
    description: Apply resources to the cluster.
    try:
    - script:
        content: |
          echo "Checking webhook health before proceeding..."
          curl -sL https://raw.githubusercontent.com/crossplane/uptest/main/hack/check_endpoints.sh -o /tmp/check_endpoints.sh && chmod +x /tmp/check_endpoints.sh
          /tmp/check_endpoints.sh
    - sleep:
        # Wait for conversion webhook endpoints to become fully operational after health check
        duration: 10s
    - apply:
        file: {{ .TestCase.TestDirectory }}
    - script:
        content: |
          echo "Running annotation script with retry logic"
          retry_annotate() {
            local max_attempts=10
            local delay=5
            local attempt=1
            local cmd="$1"

            while [ $attempt -le $max_attempts ]; do
              echo "Annotation attempt $attempt/$max_attempts for: $cmd"
              if eval "$cmd"; then
                echo "Annotation successful on attempt $attempt"
                return 0
              else
                echo "Annotation failed on attempt $attempt"
                if [ $attempt -lt $max_attempts ]; then
                  echo "Retrying in ${delay}s..."
                  sleep $delay
                fi
                ((attempt++))
              fi
            done
            echo "Annotation failed after $max_attempts attempts"
            return 1
          }
    {{- range $i, $resource := .Resources }}
    {{- if eq $resource.KindGroup "secret." -}}
      {{continue}}
    {{- end }}
          retry_annotate "${KUBECTL} annotate {{ if $resource.Namespace }}--namespace {{ $resource.Namespace }} {{ end }} {{ $resource.KindGroup }}/{{ $resource.Name }} upjet.upbound.io/test=true --overwrite"
    {{- end }}
  - name: Assert Status Conditions
    description: |
      Assert applied resources. First, run the pre-assert script if exists.
      Then, check the status conditions. Finally run the post-assert script if it
      exists.
    try:
    {{- range $resource := .Resources }}
    {{- if eq $resource.KindGroup "secret." -}}
      {{continue}}
    {{- end -}}
    {{- if $resource.PreAssertScriptPath }}
    - command:
        entrypoint: {{ $resource.PreAssertScriptPath }}
    {{- end }}
    - assert:
        resource:
          apiVersion: {{ $resource.APIVersion }}
          kind: {{ $resource.Kind }}
          metadata:
            name: {{ $resource.Name }}
            {{- if $resource.Namespace }}
            namespace: {{ $resource.Namespace }}
            {{- end }}
          status:
            {{- range $condition := $resource.Conditions }}
            ((conditions[?type == '{{ $condition }}'])[0]):
              status: "True"
            {{- end }}
    {{- if $resource.PostAssertScriptPath }}
    - command:
        entrypoint: {{ $resource.PostAssertScriptPath }}
    {{- end }}
    {{- end }}
