# This file belongs to the resource delete step.
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: delete
spec:
  timeouts:
    exec: {{ .TestCase.Timeout }}
  steps:
  - name: Delete Resources
    description: Delete resources. If needs ordered deletion, the pre-delete scripts were used.
    try:
    - script:
        content: |
          retry_kubectl() {
            local max_attempts=10
            local delay=5
            local attempt=1
            local cmd="$1"

            while [ $attempt -le $max_attempts ]; do
              echo "Kubectl attempt $attempt/$max_attempts for: $cmd"
              if eval "$cmd"; then
                echo "Kubectl operation successful on attempt $attempt"
                return 0
              else
                echo "Kubectl operation failed on attempt $attempt"
                if [ $attempt -lt $max_attempts ]; then
                  echo "Retrying in ${delay}s..."
                  sleep $delay
                fi
                ((attempt++))
              fi
            done
            echo "Kubectl operation failed after $max_attempts attempts"
            return 1
          }
        {{- range $resource := .Resources }}
        {{- if eq $resource.KindGroup "secret." -}}
          {{continue}}
        {{- end -}}
        {{- if $resource.PreDeleteScriptPath }}
          {{ $resource.PreDeleteScriptPath }}
        {{- end }}
        {{- if $resource.Namespace }}
          retry_kubectl "${KUBECTL} delete {{ $resource.KindGroup }}/{{ $resource.Name }} --wait=false --namespace {{ $resource.Namespace }} --ignore-not-found"
        {{- else }}
          retry_kubectl "${KUBECTL} delete {{ $resource.KindGroup }}/{{ $resource.Name }} --wait=false --ignore-not-found"
        {{- end }}
        {{- if $resource.PostDeleteScriptPath }}
          {{ $resource.PostDeleteScriptPath }}
        {{- end }}
        {{- end }}
  - name: Assert Deletion
    description: Assert deletion of resources.
    try:
    {{- range $resource := .Resources }}
    {{- if eq $resource.KindGroup "secret." -}}
      {{continue}}
    {{- end }}
    - script:
        content: |
          ${KUBECTL} wait {{ if $resource.Namespace }}--namespace {{ $resource.Namespace }} {{ end }}--for=delete {{ $resource.KindGroup }}/{{ $resource.Name }} --timeout {{ $.TestCase.Timeout }}
    {{- end }}
    {{- if not .TestCase.OnlyCleanUptestResources }}
    - script:
        content: |
          ${KUBECTL} wait managed --all --for=delete --timeout -1s
    {{- end }}
    {{- if .TestCase.TeardownScriptPath }}
    - command:
        entrypoint: {{ .TestCase.TeardownScriptPath }}
    {{- end }}
